# name: extension/ivm/tests/ivm_filter.test
# description:
# group: [tests]

require ivm

statement ok
create schema s;

statement ok
use memory.s;

statement ok
CREATE TABLE hello(a INTEGER, b varchar, c varchar, d bool);

statement ok
INSERT INTO hello VALUES (3, 'key', 'blah', true ), (4, 'lock', 'foo',false );

statement ok
Create table delta_hello as (select * from hello limit 0);

statement ok
Alter table delta_hello add column _duckdb_ivm_multiplicity bool;

statement ok
INSERT INTO delta_hello VALUES (1,'key', 'Mark',true, true), (2,'key', 'Hannes',false, false), (3,'key', 'Kriti',false, true);

statement ok
CREATE VIEW result as (select sum(a), count(c), b, d from hello where b='lock' and d=true group by b, d);

query IIIII
pragma ivm_upsert('memory', 's', 'result');
----

statement ok
DROP VIEW result;

statement ok
DROP TABLE delta_result;

statement ok
CREATE VIEW result as (select sum(a), count(c), b, d from hello where b='key' and d=true group by b, d);

query IIIII
pragma ivm_upsert('memory', 's', 'result');
----
1	1	key	true	true

statement ok
DROP VIEW result;

statement ok
DROP TABLE delta_result;

statement ok
CREATE VIEW result as (select sum(a), count(c), b, d from hello where b='key' OR d=true group by b, d);

query IIIII
pragma ivm_upsert('memory', 's', 'result');
----
1	1	key	true	true
2	1	key	false	false
3	1	key	false	true

statement ok
DROP VIEW result;

statement ok
DROP TABLE delta_result;

statement ok
CREATE VIEW result as (select sum(a), count(c), b from hello where b='key' group by b);

query IIII
pragma ivm_upsert('memory', 's', 'result');
----
4	2	key	true
2	1	key	false